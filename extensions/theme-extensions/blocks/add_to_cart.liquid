{% comment %}
  Pure 3D Add to Cart Button Block
  Features stunning 3D buttons with CSS pseudo-classes and animations
  Works with current product context - minimal customization
{% endcomment %}

<div class="atc-3d-block" {{ block.shopify_attributes }}>
  <style>
    @import url('https://fonts.googleapis.com/css?family=Poppins:900i');
    
    .atc-3d-block {
      padding: 20px;
      margin: 16px 0;
      display: flex;
      justify-content: center;
      align-items: center;
      perspective: 1000px;
    }
    
    /* Button Container */
    .atc-container {
      position: relative;
      display: inline-block;
      transform-style: preserve-3d;
    }
    
    /* Base 3D Button */
    .atc-3d-btn {
      position: relative;
      padding: 18px 36px;
      font-size: 16px;
      font-weight: 700;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      text-decoration: none;
      border: none;
      cursor: pointer;
      overflow: visible;
      text-transform: uppercase;
      letter-spacing: 1px;
      min-width: 220px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
      outline: none;
      user-select: none;
      -webkit-tap-highlight-color: transparent;
      transform-style: preserve-3d;
      transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    
    .atc-3d-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none !important;
    }
    
    /* 3D Button Style 1: Skewed Arrow */
    .btn-skewed {
      display: flex;
      padding: 10px 45px;
      text-decoration: none;
      font-family: 'Poppins', sans-serif;
      font-size: 18px;
      font-weight: 900;
      color: white;
      background: {{ block.settings.button_color }};
      transition: 1s;
      box-shadow: 6px 6px 0 black;
      transform: skewX(-15deg);
      border: none;
      cursor: pointer;
      position: relative;
      overflow: visible;
    }

    .btn-skewed:focus {
      outline: none; 
    }

    .btn-skewed:hover {
      transition: 0.5s;
      box-shadow: 10px 10px 0 #FBC638;
    }

    .btn-skewed .btn-text {
      transform: skewX(15deg);
    }

    .btn-skewed .btn-arrow {
      width: 20px;
      margin-left: 30px;
      position: relative;
      top: 12%;
      transform: skewX(15deg);
      transition: 0.5s;
      margin-right: 0px;
    }

    .btn-skewed:hover .btn-arrow {
      transition: 0.5s;
      margin-right: 45px;
    }

    /* SVG Arrow Animations */
    .btn-skewed path.arrow-one {
      transition: 0.4s;
      transform: translateX(-60%);
      fill: white;
    }

    .btn-skewed path.arrow-two {
      transition: 0.5s;
      transform: translateX(-30%);
      fill: white;
    }

    .btn-skewed path.arrow-three {
      fill: white;
    }

    .btn-skewed:hover path.arrow-three {
      animation: arrowColorAnim 1s infinite 0.2s;
    }

    .btn-skewed:hover path.arrow-one {
      transform: translateX(0%);
      animation: arrowColorAnim 1s infinite 0.6s;
    }

    .btn-skewed:hover path.arrow-two {
      transform: translateX(0%);
      animation: arrowColorAnim 1s infinite 0.4s;
    }

    @keyframes arrowColorAnim {
      0% { fill: white; }
      50% { fill: #FBC638; }
      100% { fill: white; }
    }
    
    /* 3D Button Style 2: Beveled Edge */
    .btn-bevel {
      background: linear-gradient(145deg, 
        {{ block.settings.button_color | color_lighten: 10 }}, 
        {{ block.settings.button_color }}, 
        {{ block.settings.button_color | color_darken: 15 }});
      color: white;
      border-radius: 12px;
      position: relative;
      box-shadow: 
        inset 2px 2px 5px {{ block.settings.button_color | color_lighten: 20 }},
        inset -2px -2px 5px {{ block.settings.button_color | color_darken: 20 }},
        5px 5px 15px rgba(0,0,0,0.3);
    }
    
    .btn-bevel::before {
      content: '';
      position: absolute;
      top: 2px;
      left: 2px;
      right: 2px;
      bottom: 2px;
      background: linear-gradient(145deg, 
        transparent, 
        rgba(255,255,255,0.1), 
        transparent);
      border-radius: 10px;
      transition: all 0.3s ease;
    }
    
    .btn-bevel:hover {
      box-shadow: 
        inset 3px 3px 8px {{ block.settings.button_color | color_lighten: 25 }},
        inset -3px -3px 8px {{ block.settings.button_color | color_darken: 25 }},
        8px 8px 20px rgba(0,0,0,0.4);
      transform: translateY(-2px);
    }
    
    .btn-bevel:active {
      box-shadow: 
        inset 5px 5px 10px {{ block.settings.button_color | color_darken: 20 }},
        inset -2px -2px 5px {{ block.settings.button_color | color_lighten: 15 }};
      transform: translateY(1px);
    }
    
    /* 3D Button Style 3: Floating Orb */
    .btn-orb {
      background: radial-gradient(ellipse at top left, 
        {{ block.settings.button_color | color_lighten: 20 }}, 
        {{ block.settings.button_color }}, 
        {{ block.settings.button_color | color_darken: 20 }});
      color: white;
      border-radius: 50px;
      position: relative;
      box-shadow: 
        0 8px 16px rgba(0,0,0,0.3),
        inset 0 1px 0 rgba(255,255,255,0.3),
        inset 0 -1px 0 rgba(0,0,0,0.2);
      transform: translateZ(0);
    }
    
    .btn-orb::before {
      content: '';
      position: absolute;
      top: 15%;
      left: 20%;
      width: 30%;
      height: 30%;
      background: radial-gradient(ellipse, 
        rgba(255,255,255,0.6), 
        rgba(255,255,255,0.2), 
        transparent);
      border-radius: 50%;
      transform: rotate(-45deg);
      transition: all 0.3s ease;
    }
    
    .btn-orb:hover {
      transform: translateZ(5px) translateY(-5px) scale(1.05);
      box-shadow: 
        0 15px 30px rgba(0,0,0,0.4),
        inset 0 2px 0 rgba(255,255,255,0.4),
        inset 0 -2px 0 rgba(0,0,0,0.3);
    }
    
    .btn-orb:hover::before {
      top: 10%;
      left: 15%;
      width: 40%;
      height: 40%;
    }
    
    .btn-orb:active {
      transform: translateZ(2px) translateY(-2px) scale(0.98);
    }
    
    /* 3D Button Style 4: Holographic Shimmer */
    .btn-holographic {
      background: linear-gradient(45deg, 
        {{ block.settings.button_color }}, 
        {{ block.settings.button_color | color_lighten: 20 }}, 
        {{ block.settings.button_color | color_darken: 10 }}, 
        {{ block.settings.button_color | color_lighten: 15 }});
      background-size: 400% 400%;
      color: white;
      border-radius: 16px;
      position: relative;
      overflow: hidden;
      animation: holographicShift 4s ease-in-out infinite;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }
    
    @keyframes holographicShift {
      0%, 100% { background-position: 0% 50%; }
      25% { background-position: 100% 50%; }
      50% { background-position: 100% 100%; }
      75% { background-position: 0% 100%; }
    }
    
    .btn-holographic::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg, 
        transparent, 
        rgba(255, 255, 255, 0.1), 
        transparent, 
        rgba(255, 255, 255, 0.1), 
        transparent);
      background-size: 400% 400%;
      border-radius: 18px;
      z-index: -1;
      animation: holographicBorder 3s ease-in-out infinite;
    }
    
    @keyframes holographicBorder {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    .btn-holographic::after {
      content: '';
      position: absolute;
      top: 10%;
      left: -100%;
      width: 100%;
      height: 80%;
      background: linear-gradient(90deg, 
        transparent, 
        rgba(255, 255, 255, 0.6), 
        transparent);
      transform: skewX(-20deg);
      transition: left 0.8s ease;
    }
    
    .btn-holographic:hover {
      transform: translateY(-4px) scale(1.05);
      box-shadow: 0 12px 48px rgba(0, 0, 0, 0.4);
    }
    
    .btn-holographic:hover::after {
      left: 100%;
    }
    
    /* 3D Button Style 5: Animated Border */
    .btn-animated-border {
      background: linear-gradient(-30deg, {{ block.settings.button_color | color_darken: 20 }} 50%, {{ block.settings.button_color | color_darken: 30 }} 50%);
      padding: 20px 40px;
      display: inline-block;
      transform: translate(0%, 0%);
      overflow: hidden;
      color: white;
      font-size: 16px;
      font-weight: 700;
      letter-spacing: 2.5px;
      text-align: center;
      text-transform: uppercase;
      text-decoration: none;
      box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
      border: none;
      cursor: pointer;
      position: relative;
    }

    .btn-animated-border::before {
      content: '';
      position: absolute;
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      background-color: {{ block.settings.button_color | color_lighten: 20 }};
      opacity: 0;
      transition: .2s opacity ease-in-out;
    }

    .btn-animated-border:hover::before {
      opacity: 0.2;
    }

    .btn-animated-border .border-span {
      position: absolute;
    }

    .btn-animated-border .border-span:nth-child(1) {
      top: 0px;
      left: 0px;
      width: 100%;
      height: 2px;
      background: linear-gradient(to left, rgba(0, 0, 0, 0), {{ block.settings.button_color | color_lighten: 40 }});
      animation: 2s animateTop linear infinite;
    }

    .btn-animated-border .border-span:nth-child(2) {
      top: 0px;
      right: 0px;
      height: 100%;
      width: 2px;
      background: linear-gradient(to top, rgba(0, 0, 0, 0), {{ block.settings.button_color | color_lighten: 40 }});
      animation: 2s animateRight linear -1s infinite;
    }

    .btn-animated-border .border-span:nth-child(3) {
      bottom: 0px;
      left: 0px;
      width: 100%;
      height: 2px;
      background: linear-gradient(to right, rgba(0, 0, 0, 0), {{ block.settings.button_color | color_lighten: 40 }});
      animation: 2s animateBottom linear infinite;
    }

    .btn-animated-border .border-span:nth-child(4) {
      top: 0px;
      left: 0px;
      height: 100%;
      width: 2px;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0), {{ block.settings.button_color | color_lighten: 40 }});
      animation: 2s animateLeft linear -1s infinite;
    }

    @keyframes animateTop {
      0% { transform: translateX(100%); }
      100% { transform: translateX(-100%); }
    }

    @keyframes animateRight {
      0% { transform: translateY(100%); }
      100% { transform: translateY(-100%); }
    }

    @keyframes animateBottom {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(100%); }
    }

    @keyframes animateLeft {
      0% { transform: translateY(-100%); }
      100% { transform: translateY(100%); }
    }
    
    /* Loading, Success & Error States */
    .btn-loading {
      pointer-events: none;
    }
    
    .btn-loading .btn-text {
      opacity: 0;
    }
    
    .btn-loading .loading-spinner {
      opacity: 1;
    }
    
    .loading-spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .spinner {
      width: 20px;
      height: 20px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    /* Success State */
    .btn-success .btn-text {
      opacity: 0;
    }
    
    .btn-success .success-icon {
      opacity: 1;
    }
    
    .success-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
      transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }
    
    .btn-success .success-icon {
      transform: translate(-50%, -50%) scale(1);
    }
    
    /* Error State */
    .btn-error {
      background: #ef4444 !important;
      color: white !important;
      animation: shake 0.5s ease-in-out;
    }
    
    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }
    
    /* Quantity Selector */
    .quantity-selector {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0;
      margin-bottom: 1rem;
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      overflow: hidden;
      background: white;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .qty-btn {
      background: #f9fafb;
      border: none;
      padding: 12px 16px;
      cursor: pointer;
      font-weight: 600;
      font-size: 18px;
      color: #374151;
      transition: all 0.2s ease;
      min-width: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .qty-btn:hover {
      background: #e5e7eb;
      color: #1f2937;
    }
    
    .qty-btn:active {
      background: #d1d5db;
      transform: scale(0.95);
    }
    
    .qty-input {
      border: none;
      padding: 12px 16px;
      width: 80px;
      text-align: center;
      font-weight: 600;
      font-size: 16px;
      background: white;
      color: #1f2937;
    }
    
    .qty-input:focus {
      outline: none;
      background: #f9fafb;
    }
    
    /* Cart Icon */
    .cart-icon {
      width: 20px;
      height: 20px;
      fill: currentColor;
      transition: transform 0.2s ease;
    }
    
    .atc-btn:hover .cart-icon {
      transform: scale(1.1);
    }
    
    /* No Product Message */
    .no-product-message {
      text-align: center;
      padding: 2rem;
      color: #6b7280;
      font-style: italic;
    }
    
    .no-product-message p {
      margin: 0;
      font-size: 14px;
    }
    
    .btn-loading .btn-text {
      opacity: 0;
    }
    
    .btn-loading .loading-spinner {
      opacity: 1;
    }
    
    .loading-spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .spinner {
      width: 20px;
      height: 20px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    /* Success State */
    .btn-success {
      background: #10b981 !important;
      color: white !important;
    }
    
    .btn-success .btn-text::after {
      content: ' ✓';
    }
    
    /* Cart Icon */
    .cart-icon {
      width: 18px;
      height: 18px;
      fill: currentColor;
    }
    
    /* Quantity Selector */
    .quantity-selector {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }
    
    .quantity-label {
      font-weight: 600;
      color: {{ block.settings.description_color }};
    }
    
    .quantity-controls {
      display: flex;
      align-items: center;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      overflow: hidden;
    }
    
    .quantity-btn {
      background: #f9fafb;
      border: none;
      padding: 8px 12px;
      cursor: pointer;
      font-weight: bold;
      color: #374151;
      transition: background-color 0.2s;
    }
    
    .quantity-btn:hover {
      background: #e5e7eb;
    }
    
    .quantity-input {
      border: none;
      padding: 8px 12px;
      width: 60px;
      text-align: center;
      font-weight: 600;
      background: white;
    }
    
    .quantity-input:focus {
      outline: none;
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .add-to-cart-block {
        padding: 1.5rem;
      }
      
      .add-to-cart-btn {
        min-width: 100%;
        padding: 16px 24px;
      }
      
      .quantity-selector {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }
    }
  </style>
  
  {% comment %} Use current product context - works on product pages {% endcomment %}
  {% if product and product != empty %}
    {% if product.available %}
      <form action="/cart/add" method="post" enctype="multipart/form-data" class="atc-form" data-product-id="{{ product.id }}">
        <input type="hidden" name="quantity" value="1">
        
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" class="variant-id">
        
        <div class="atc-container">
          {% if block.settings.button_style == 'skewed' %}
            <button type="submit" class="atc-3d-btn btn-{{ block.settings.button_style }}" id="atc-{{ block.id }}" aria-label="Add {{ product.title }} to cart">
              <span class="btn-text">{{ block.settings.button_text }}</span>
              <span class="btn-arrow">
                <svg width="66px" height="43px" viewBox="0 0 66 43" version="1.1" xmlns="http://www.w3.org/2000/svg">
                  <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <path class="arrow-one" d="M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z" fill="#FFFFFF"></path>
                    <path class="arrow-two" d="M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z" fill="#FFFFFF"></path>
                    <path class="arrow-three" d="M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z" fill="#FFFFFF"></path>
                  </g>
                </svg>
              </span>
              <div class="loading-spinner">
                <div class="spinner"></div>
              </div>
              <div class="success-icon">
                <svg viewBox="0 0 24 24" width="20" height="20" fill="currentColor">
                  <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                </svg>
              </div>
            </button>
          {% elsif block.settings.button_style == 'animated-border' %}
            <button type="submit" class="atc-3d-btn btn-{{ block.settings.button_style }}" id="atc-{{ block.id }}" aria-label="Add {{ product.title }} to cart">
              <span class="border-span"></span>
              <span class="border-span"></span>
              <span class="border-span"></span>
              <span class="border-span"></span>
              <span class="btn-text">{{ block.settings.button_text }}</span>
              <div class="loading-spinner">
                <div class="spinner"></div>
              </div>
              <div class="success-icon">
                <svg viewBox="0 0 24 24" width="20" height="20" fill="currentColor">
                  <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                </svg>
              </div>
            </button>
          {% else %}
            <button type="submit" class="atc-3d-btn btn-{{ block.settings.button_style }}" id="atc-{{ block.id }}" aria-label="Add {{ product.title }} to cart">
              <svg class="cart-icon" viewBox="0 0 24 24" width="20" height="20" fill="currentColor">
                <path d="M7 18c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12L8.1 13h7.45c.75 0 1.41-.41 1.75-1.03L21.7 4H5.21l-.94-2H1zm16 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
              </svg>
              <span class="btn-text">{{ block.settings.button_text }}</span>
              <div class="loading-spinner">
                <div class="spinner"></div>
              </div>
              <div class="success-icon">
                <svg viewBox="0 0 24 24" width="20" height="20" fill="currentColor">
                  <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                </svg>
              </div>
            </button>
          {% endif %}
        </div>
      </form>
    {% else %}
      <div class="atc-container">
        <button class="atc-3d-btn btn-{{ block.settings.button_style }}" disabled aria-label="Product sold out">
          <span class="btn-text">Sold Out</span>
        </button>
      </div>
    {% endif %}
  {% else %}
    <div class="atc-container">
      <div class="no-product-message">
        <p>This Add to Cart button will appear on product pages.</p>
      </div>
    </div>
  {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('.atc-form');
  const button = document.getElementById('atc-{{ block.id }}');
  
  // Advanced Add to Cart functionality
  if (form && button) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Prevent double submission
      if (button.classList.contains('btn-loading')) return;
      
      // Add loading state with animation
      button.classList.add('btn-loading');
      
      // Get form data
      const formData = new FormData(form);
      
      // Add to cart via AJAX with enhanced error handling
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams(formData)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        // Success state with enhanced feedback
        button.classList.remove('btn-loading');
        button.classList.add('btn-success');
        
        // Haptic feedback for success
        if (navigator.vibrate) navigator.vibrate([50, 30, 50]);
        
        // Reset after 3 seconds
        setTimeout(() => {
          button.classList.remove('btn-success');
        }, 3000);
        
        // Trigger cart update events
        document.dispatchEvent(new CustomEvent('cart:updated', { 
          detail: { 
            item: data, 
            quantity: parseInt(formData.get('quantity')),
            variant_id: formData.get('id')
          } 
        }));
        
        // Update cart drawer/counter if present
        if (window.theme && window.theme.cart) {
          window.theme.cart.updateCount();
        }
        
        console.log('✅ Product added to cart:', data);
      })
      .catch(error => {
        // Enhanced error handling
        button.classList.remove('btn-loading');
        button.classList.add('btn-error');
        
        // Error haptic feedback
        if (navigator.vibrate) navigator.vibrate([100, 50, 100]);
        
        console.error('❌ Error adding to cart:', error);
        
        // Show user-friendly error message
        const errorMessage = error.message.includes('sold out') || error.message.includes('inventory') 
          ? 'Sorry, this item is currently out of stock.'
          : 'Unable to add item to cart. Please try again.';
        
        // Create toast notification instead of alert
        showToast(errorMessage, 'error');
        
        // Reset error state after 3 seconds
        setTimeout(() => {
          button.classList.remove('btn-error');
        }, 3000);
      });
    });
  }
  
  // Toast notification system
  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `atc-toast atc-toast-${type}`;
    toast.textContent = message;
    toast.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: ${type === 'error' ? '#ef4444' : '#10b981'};
      color: white;
      padding: 12px 20px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      z-index: 10000;
      transform: translateX(100%);
      transition: transform 0.3s ease;
      font-size: 14px;
      font-weight: 500;
    `;
    
    document.body.appendChild(toast);
    
    // Animate in
    setTimeout(() => {
      toast.style.transform = 'translateX(0)';
    }, 10);
    
    // Remove after 4 seconds
    setTimeout(() => {
      toast.style.transform = 'translateX(100%)';
      setTimeout(() => {
        if (toast.parentNode) {
          toast.parentNode.removeChild(toast);
        }
      }, 300);
    }, 4000);
  }
});
</script>

{% schema %}
{
  "name": "3D Add to Cart Button",
  "target": "section",
  "settings": [
    {
      "type": "select",
      "id": "button_style",
      "label": "3D Button Style",
      "options": [
        {
          "value": "skewed",
          "label": "⚡ Skewed Arrow"
        },
        {
          "value": "bevel",
          "label": "💎 Beveled Edge"
        },
        {
          "value": "orb",
          "label": "🔮 Floating Orb"
        },
        {
          "value": "holographic",
          "label": "🌈 Holographic Shimmer"
        },
        {
          "value": "animated-border",
          "label": "🔥 Animated Border"
        }
      ],
      "default": "skewed",
      "info": "Choose from 5 stunning 3D button designs"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Add to Cart"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button Color",
      "default": "#007aff"
    }
  ]
}
{% endschema %}
